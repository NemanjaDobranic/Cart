.Form > h1 {
  font-size: 27px;
  line-height: 27px;
  color: var(--black);
}

.Form > h1:first-child {
  font-weight: 600;
}

.Form > h1:last-child {
  font-weight: 400;
}

.Form .attributes {
  list-style-type: none;
  margin: 42px 0;
  padding: 0;
}

.Form .attributes li {
  margin-bottom: 24px;
}

.Form .attributes li:last-child {
  margin: 0;
}

.Form .attributes li > h3 {
  font-size: 18px;

  line-height: 18px;
  font-weight: 700;
  color: var(--black);
}

.attribute {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 12px;
}

.Form .item {
  position: relative;
}

.Form input[type="checkbox"] {
  position: absolute;
  z-index: -1;
}

.Form .item .text {
  padding: 14px 28px;
  border: 1px solid var(--black);
  color: var(--black);
  background-color: white;
  font-size: 18px;
  font-weight: 400;
}

input[type="checkbox"]:focus + label.text {
  background-color: var(--black);
  color: white;
  transition: background-color var(--animation-duration) linear;
}

.Form .item .text:hover {
  cursor: pointer;
  background-color: var(--black);
  color: white;
  transition: background-color var(--animation-duration) linear;
}

input:focus {
  background-color: var(--black);
  color: white;
  transition: background-color var(--animation-duration) linear;
}

.Form .swatch {
  height: 32px;
  width: 32px;
  color: transparent;
  position: relative;
}

.Form .swatch:hover > div,
input[type="checkbox"]:focus + .swatch > div {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
  box-sizing: border-box;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  border: 1px solid var(--green);
}

.Form h3 {
  text-transform: uppercase;
}

.Form #price {
  font-weight: 700;
  font-size: 24px;
  line-height: 18px;
}

.Form button {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 16px;
  line-height: 19.2px;
  color: white;
  background-color: var(--green);
  border: none;
  display: block;
  padding: 1rem 0;
  margin: 40px 0;
  width: 100%;
  cursor: pointer;
}
